<?php

namespace backend\modules\sms\models;

use Yii;
use yii\helpers\ArrayHelper;
use gmars\sms\Sms;

/**
 * This is the model class for table "verifycode".
 *
 * @property string $phone
 * @property string $code
 * @property string $create_time
 * @property string $active_time
 */
class Verifycode extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'verifycode';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['phone'], 'required'],
            [['code', 'active_time'], 'integer'],
            [['create_time'], 'safe'],
            [['phone'], 'string', 'max' => 16],
            [['phone'], 'unique','on'=> ['create']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'phone' => '手机号',
            'code' => '验证码',
            'create_time' => '生成时间',
            'active_time' => '有效时间',
        ];
    }

    public function create(){
        if (!$this->validate()) {
            return false;
        }
        $code = rand(1000,9999);
//        $code = 6666;       //短信平台调通前先用固定的  T.B.D
        $this->setAttribute('code',$code);
        $this->save();

        return $code;
    }

    /** @inheritdoc */
    public static function findIdentity($phone)
    {
        return static::findOne(['phone'=>$phone]);
    }
    /**
     * @param $phone
     * @return null|static
     */
    public function getCode(){
        if (!$this->validate()) {
            $this->addError("errmsg", \Yii::t('app', '请求的参数格式不正确'));
            return false;
        }

        $model = static::findOne(['phone'=>$this->phone]);
        if ($model && method_exists($model,'delete')) {
            $model->delete();
        }

        return $this->create();
    }

    //发送短信验证码 0:注册 1:找回密码 2:更换手机号
    public function send($type='login'){
        if (!$this->getCode()) {
            return false;
        }
        
       
        
//         return true;
        if (!in_array($type,['register','reset','change'])) {
            $this->addError("errmsg", \Yii::t('app', '类型错误'));
            return false;
        } 
      
//         $message = sprintf($baseArr[$type],$this->phone,$this->code);
        
               $smsObj =  new Sms('ALIDAYU',['appkey'=>\Yii::$app->params['ailisms']['appkey'],'secretkey'=>\Yii::$app->params['ailisms']['secretkey']]);
               $smsObj->send([
                   'mobile' => $this->phone,
                   'signname' => \Yii::$app->params['ailisms']['signname'],
                   'templatecode' => \Yii::$app->params['ailisms']['templatecode'][$type],
                   'data' => [
                       'code' => $this->code,
                       'name' => '您好',
        //                'time' => '2'
                   ],
               ]);

        //发送短信验证码
//         if (!Message::send($this->phone,$message)) {
//             $this->addError("errmsg", \Yii::t('app', '内部错误'));
//             return false;
//         }
        
        return true;
    }

    public function checkCode($code){
        if (!$this->validate()) {
            $this->addError("errmsg", \Yii::t('app', '请求的参数格式不正确'));
            return false;
        }

        $model = static::findOne(['phone'=>$this->phone]);
//        if (!$model) {
//            $this->addError("errmsg", \Yii::t('app', '该手机号未绑定账号!'));
//            return false;
//        }

        if ($model->code != $code) {
            $this->addError("errmsg", \Yii::t('app', '验证码错误!'));
            return false;
        }

        if (time() - strtotime($model->create_time) > $model->active_time) {
            $this->addError("errmsg", \Yii::t('app', '验证码已经过期!'));
            return false;
        }

        return true;
    }

    public function beforeSave($insert)
    {
        $this->setAttribute('create_time',date('Y-m-d H:i:s'));
        $this->setAttribute('active_time',120);
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
